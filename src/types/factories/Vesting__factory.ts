/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vesting, VestingInterface } from "../Vesting";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiaryAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "startTimestamp",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "durationSeconds",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "releasable",
        type: "uint256",
      },
    ],
    name: "Releasable",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "Times",
    type: "event",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "duration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "released",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "timestamp",
        type: "uint64",
      },
    ],
    name: "vestedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x610100604052600a60e05234801561001657600080fd5b50604051610fbd380380610fbd833981016040819052610035916100ea565b8282826001600160a01b0383166100a55760405162461bcd60e51b815260206004820152602a60248201527f56657374696e6757616c6c65743a2062656e6566696369617279206973207a65604482015269726f206164647265737360b01b606482015260840160405180910390fd5b6001600160a01b039092166080526001600160401b0390811660a0521660c0525061013b915050565b80516001600160401b03811681146100e557600080fd5b919050565b6000806000606084860312156100ff57600080fd5b83516001600160a01b038116811461011657600080fd5b9250610124602085016100ce565b9150610132604085016100ce565b90509250925092565b60805160a05160c05160e051610e046101b9600039600061045b01526000818160e8015281816103800152818161073b015261079e01526000818161020b01528181610269015281816103ab015281816106eb0152818161075f01526107c90152600081816101520152818161056f01526106bf0152610e046000f3fe60806040526004361061009a5760003560e01c8063810ec23b11610069578063961325211161004e57806396132521146101b15780639852595c146101c6578063be9a6555146101fc57600080fd5b8063810ec23b1461017c57806386d1a69f1461019c57600080fd5b80630a17b06b146100a65780630fb5a6b4146100d9578063191655871461011657806338af3eed1461013857600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506100c66100c1366004610c37565b610239565b6040519081526020015b60405180910390f35b3480156100e557600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100c6565b34801561012257600080fd5b50610136610131366004610c69565b61025d565b005b34801561014457600080fd5b506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020016100d0565b34801561018857600080fd5b506100c6610197366004610c84565b6105b3565b3480156101a857600080fd5b50610136610658565b3480156101bd57600080fd5b506000546100c6565b3480156101d257600080fd5b506100c66101e1366004610c69565b6001600160a01b031660009081526001602052604090205490565b34801561020857600080fd5b507f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166100c6565b600061025761024760005490565b6102519047610ccd565b836106e7565b92915050565b4267ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000811690821610156102e05760405162461bcd60e51b815260206004820152601760248201527f56657374696e67206e6f7420737461727465642079657400000000000000000060448201526064015b60405180910390fd5b6001600160a01b0382166000908152600160205260408120546040516370a0823160e01b81523060048201526001600160a01b038516906370a082319060240160206040518083038186803b15801561033857600080fd5b505afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103709190610ce5565b61037a9190610ccd565b905060007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166103e89067ffffffffffffffff8616610cfe565b6103f29190610d15565b60008181526003602052604090205490915060ff16156104545760405162461bcd60e51b815260206004820152600e60248201527f616c72656164792076657374656400000000000000000000000000000000000060448201526064016102d7565b60006104807f000000000000000000000000000000000000000000000000000000000000000084610d15565b60405190915081907fc6af931c05885c405f119e1f6e9208c8a6162cbb442b652bf36e7e9f1689b1a290600090a2600081116104fe5760405162461bcd60e51b815260206004820152601160248201527f72756e206f7574206f6620746f6b656e7300000000000000000000000000000060448201526064016102d7565b6001600160a01b03851660009081526002602052604081208054839290610526908490610ccd565b90915550506040518181526001600160a01b038616907fc0e523490dd523c33b1878c9eb14ff46991e3f5b2cd33710918618f2a39cba1b9060200160405180910390a2610594857f000000000000000000000000000000000000000000000000000000000000000083610821565b506000908152600360205260409020805460ff19166001179055505050565b6001600160a01b038216600090815260016020526040812054610651906040516370a0823160e01b81523060048201526001600160a01b038616906370a082319060240160206040518083038186803b15801561060f57600080fd5b505afa158015610623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106479190610ce5565b6102519190610ccd565b9392505050565b6000805461066542610239565b61066f9190610cfe565b9050806000808282546106829190610ccd565b90915550506040518181527fda9d4e5f101b8b9b1c5b76d0c5a9f7923571acfc02376aa076b75a8c080c956b9060200160405180910390a16106e47f00000000000000000000000000000000000000000000000000000000000000008261088d565b50565b60007f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff168267ffffffffffffffff16101561072d57506000610257565b61078467ffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116907f000000000000000000000000000000000000000000000000000000000000000016610ccd565b8267ffffffffffffffff16111561079c575081610257565b7f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166108069067ffffffffffffffff8516610cfe565b6108109085610d37565b61081a9190610d15565b9050610257565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526108889084906109a6565b505050565b804710156108dd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102d7565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461092a576040519150601f19603f3d011682016040523d82523d6000602084013e61092f565b606091505b50509050806108885760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102d7565b60006109fb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a8b9092919063ffffffff16565b8051909150156108885780806020019051810190610a199190610d56565b6108885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102d7565b6060610a9a8484600085610aa2565b949350505050565b606082471015610b1a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102d7565b843b610b685760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102d7565b600080866001600160a01b03168587604051610b849190610da8565b60006040518083038185875af1925050503d8060008114610bc1576040519150601f19603f3d011682016040523d82523d6000602084013e610bc6565b606091505b5091509150610bd6828286610be1565b979650505050505050565b60608315610bf0575081610651565b825115610c005782518084602001fd5b8160405162461bcd60e51b81526004016102d79190610dc4565b803567ffffffffffffffff81168114610c3257600080fd5b919050565b600060208284031215610c4957600080fd5b61065182610c1a565b80356001600160a01b0381168114610c3257600080fd5b600060208284031215610c7b57600080fd5b61065182610c52565b60008060408385031215610c9757600080fd5b610ca083610c52565b9150610cae60208401610c1a565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ce057610ce0610cb7565b500190565b600060208284031215610cf757600080fd5b5051919050565b600082821015610d1057610d10610cb7565b500390565b600082610d3257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610d5157610d51610cb7565b500290565b600060208284031215610d6857600080fd5b8151801515811461065157600080fd5b60005b83811015610d93578181015183820152602001610d7b565b83811115610da2576000848401525b50505050565b60008251610dba818460208701610d78565b9190910192915050565b6020815260008251806020840152610de3816040850160208701610d78565b601f01601f1916919091016040019291505056fea164736f6c6343000809000a";

type VestingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VestingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Vesting__factory extends ContractFactory {
  constructor(...args: VestingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Vesting";
  }

  deploy(
    beneficiaryAddress: string,
    startTimestamp: BigNumberish,
    durationSeconds: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vesting> {
    return super.deploy(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    ) as Promise<Vesting>;
  }
  getDeployTransaction(
    beneficiaryAddress: string,
    startTimestamp: BigNumberish,
    durationSeconds: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      beneficiaryAddress,
      startTimestamp,
      durationSeconds,
      overrides || {}
    );
  }
  attach(address: string): Vesting {
    return super.attach(address) as Vesting;
  }
  connect(signer: Signer): Vesting__factory {
    return super.connect(signer) as Vesting__factory;
  }
  static readonly contractName: "Vesting";
  public readonly contractName: "Vesting";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VestingInterface {
    return new utils.Interface(_abi) as VestingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}

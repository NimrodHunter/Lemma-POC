/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { USDLFactory, USDLFactoryInterface } from "../USDLFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "usdcAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "manager_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EtherFund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Minted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redeemed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "reedemAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cd738038062001cd7833981016040819052620000349162000297565b604080518082018252600981526813195b5b58481554d160ba1b6020808301918252835180850190945260048452631554d11360e21b9084015281519192916200008191600391620001d4565b50805162000097906004906020840190620001d4565b50506001600555506001600160a01b038216620000fb5760405162461bcd60e51b815260206004820152601c60248201527f5553444320616464726573732073686f756c64206e6f7420626520300000000060448201526064015b60405180910390fd5b6001600160a01b038116620001535760405162461bcd60e51b815260206004820152601f60248201527f4d616e6167657220616464726573732073686f756c64206e6f742062652030006044820152606401620000f2565b600680546001600160a01b039384166001600160a01b0319918216811790925560078054939094169216919091179091556000908152600860205260408120805460ff1990811660019081179092559180527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c780549092161790556200030c565b828054620001e290620002cf565b90600052602060002090601f01602090048101928262000206576000855562000251565b82601f106200022157805160ff191683800117855562000251565b8280016001018555821562000251579182015b828111156200025157825182559160200191906001019062000234565b506200025f92915062000263565b5090565b5b808211156200025f576000815560010162000264565b80516001600160a01b03811681146200029257600080fd5b919050565b60008060408385031215620002ab57600080fd5b620002b6836200027a565b9150620002c6602084016200027a565b90509250929050565b600181811c90821680620002e457607f821691505b602082108114156200030657634e487b7160e01b600052602260045260246000fd5b50919050565b6119bb806200031c6000396000f3fe6080604052600436106101125760003560e01c806340c10f19116100a55780639e2bb53911610074578063a9059cbb11610059578063a9059cbb146102f3578063b60d428814610313578063dd62ed3e1461031b57610122565b80639e2bb539146102b3578063a457c2d7146102d357610122565b806340c10f191461022857806370a0823114610248578063745787191461027e57806395d89b411461029e57610122565b80631e9a6950116100e15780631e9a6950146101ac57806323b872dd146101cc578063313ce567146101ec578063395093511461020857610122565b806306fdde031461012a578063095ea7b3146101555780631249c58b1461018557806318160ddd1461018d57610122565b366101225761011f610361565b50005b61011f610361565b34801561013657600080fd5b5061013f6103f2565b60405161014c9190611798565b60405180910390f35b34801561016157600080fd5b506101756101703660046117e2565b610484565b604051901515815260200161014c565b61017561049a565b34801561019957600080fd5b506002545b60405190815260200161014c565b3480156101b857600080fd5b506101756101c73660046117e2565b6105e3565b3480156101d857600080fd5b506101756101e736600461180c565b61091c565b3480156101f857600080fd5b506040516012815260200161014c565b34801561021457600080fd5b506101756102233660046117e2565b6109dd565b34801561023457600080fd5b506101756102433660046117e2565b610a19565b34801561025457600080fd5b5061019e610263366004611848565b6001600160a01b031660009081526020819052604090205490565b34801561028a57600080fd5b5061019e6102993660046117e2565b610be9565b3480156102aa57600080fd5b5061013f610bff565b3480156102bf57600080fd5b5061019e6102ce3660046117e2565b610c0e565b3480156102df57600080fd5b506101756102ee3660046117e2565b610c37565b3480156102ff57600080fd5b5061017561030e3660046117e2565b610ce8565b610175610361565b34801561032757600080fd5b5061019e610336366004611863565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008034116103b75760405162461bcd60e51b815260206004820152601760248201527f796f75206d7573742073656e6420736f6d657468696e6700000000000000000060448201526064015b60405180910390fd5b60405134815233907fe7d9036a1a99d80640735fc6f4b95a23173d5468f91b17325f2a1bdcd3cd15919060200160405180910390a250600190565b60606003805461040190611896565b80601f016020809104026020016040519081016040528092919081815260200182805461042d90611896565b801561047a5780601f1061044f5761010080835404028352916020019161047a565b820191906000526020600020905b81548152906001019060200180831161045d57829003601f168201915b5050505050905090565b6000610491338484610cf5565b50600192915050565b6000600260055414156104ef5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103ae565b6002600555346105415760405162461bcd60e51b815260206004820152601660248201527f796f75206d7573742073656e6420736f6d65206574680000000000000000000060448201526064016103ae565b61055533610550600034610be9565b610e1a565b61055e34610ef9565b6105aa5760405162461bcd60e51b815260206004820152600e60248201527f73656e6420657468206661696c7300000000000000000000000000000000000060448201526064016103ae565b604051349060009033907f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f0908390a45060018060055590565b6001600160a01b03821660009081526008602052604081205460ff1661064b5760405162461bcd60e51b815260206004820152601160248201527f746f6b656e206e6f7420616c6c6f77656400000000000000000000000000000060448201526064016103ae565b6000821161069b5760405162461bcd60e51b815260206004820152601760248201527f796f75206d7573742073656e6420736f6d657468696e6700000000000000000060448201526064016103ae565b6040516370a0823160e01b815233600482015260009030906370a082319060240160206040518083038186803b1580156106d457600080fd5b505afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070c91906118d1565b116107595760405162461bcd60e51b815260206004820152601760248201527f6d757374206861766520656e6f75676820746f6b656e7300000000000000000060448201526064016103ae565b60006107658484610c0e565b90506001600160a01b03841615610862576040516370a0823160e01b815230600482015281906001600160a01b038616906370a082319060240160206040518083038186803b1580156107b757600080fd5b505afa1580156107cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef91906118d1565b10156108495760405162461bcd60e51b815260206004820152602360248201527f7468697320636f6e747261637420646f65736e277420656e6f75676820616d6f6044820152621d5b9d60ea1b60648201526084016103ae565b610854843383610f59565b61085d57600080fd5b6108d0565b804710156108be5760405162461bcd60e51b815260206004820152602360248201527f7468697320636f6e747261637420646f65736e277420656e6f75676820616d6f6044820152621d5b9d60ea1b60648201526084016103ae565b6108c781610ef9565b6108d057600080fd5b6108da3384611062565b60405181906001600160a01b0386169033907f27d4634c833b7622a0acddbf7f746183625f105945e95c723ad1d5a9f2a0b6fc90600090a45060019392505050565b60006109298484846111ad565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156109c35760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084016103ae565b6109d08533858403610cf5565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610491918590610a14908690611900565b610cf5565b600060026005541415610a6e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103ae565b60026005556001600160a01b03831660009081526008602052604090205460ff16610adb5760405162461bcd60e51b815260206004820152601160248201527f746f6b656e206e6f7420616c6c6f77656400000000000000000000000000000060448201526064016103ae565b610ae63384846113ac565b610b325760405162461bcd60e51b815260206004820152601360248201527f7472616e736665722066726f6d206661696c730000000000000000000000000060448201526064016103ae565b610b40336105508585610be9565b600754610b589084906001600160a01b031684610f59565b610ba45760405162461bcd60e51b815260206004820152601060248201527f73656e6420746f6b656e206661696c730000000000000000000000000000000060448201526064016103ae565b60405182906001600160a01b0385169033907f9d228d69b5fdb8d273a2336f8fb8612d039631024ea9bf09c424a9503aa078f090600090a45060018060055592915050565b600081610bf584611409565b6109d69190611918565b60606004805461040190611896565b6000610c1983611409565b82610c2330611409565b610c2d9190611918565b6109d69190611937565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610cd15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103ae565b610cde3385858403610cf5565b5060019392505050565b60006104913384846111ad565b6001600160a01b038316610d575760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103ae565b6001600160a01b038216610db85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103ae565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038216610e705760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103ae565b8060026000828254610e829190611900565b90915550506001600160a01b03821660009081526020819052604081208054839290610eaf908490611900565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60075460405160009182916001600160a01b039091169084908381818185875af1925050503d8060008114610f4a576040519150601f19603f3d011682016040523d82523d6000602084013e610f4f565b606091505b5090949350505050565b60006001600160a01b038416610fb15760405162461bcd60e51b815260206004820152601360248201527f6d7573742062652076616c696420746f6b656e0000000000000000000000000060448201526064016103ae565b6001600160a01b0383166110075760405162461bcd60e51b815260206004820152601560248201527f6d7573742062652076616c69642061646472657373000000000000000000000060448201526064016103ae565b600082116110575760405162461bcd60e51b815260206004820152601760248201527f796f75206d7573742073656e6420736f6d657468696e6700000000000000000060448201526064016103ae565b610cde848484611430565b6001600160a01b0382166110c25760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103ae565b6001600160a01b038216600090815260208190526040902054818110156111365760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103ae565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611165908490611959565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610e0d565b505050565b6001600160a01b0383166112295760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103ae565b6001600160a01b03821661128b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103ae565b6001600160a01b0383166000908152602081905260409020548181101561131a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103ae565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611351908490611900565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161139d91815260200190565b60405180910390a35b50505050565b60008082116113fd5760405162461bcd60e51b815260206004820152601760248201527f796f75206d7573742073656e6420736f6d657468696e6700000000000000000060448201526064016103ae565b610cde838530856114c0565b60006001600160a01b0382161561142257506001919050565b506109c4919050565b919050565b6040516001600160a01b0383166024820152604481018290526111a890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526114f8565b6040516001600160a01b03808516602483015283166044820152606481018290526113a69085906323b872dd60e01b9060840161145c565b600061154d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115dd9092919063ffffffff16565b8051909150156111a8578080602001905181019061156b9190611970565b6111a85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103ae565b60606115ec84846000856115f4565b949350505050565b60608247101561166c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103ae565b843b6116ba5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103ae565b600080866001600160a01b031685876040516116d69190611992565b60006040518083038185875af1925050503d8060008114611713576040519150601f19603f3d011682016040523d82523d6000602084013e611718565b606091505b5091509150611728828286611733565b979650505050505050565b606083156117425750816109d6565b8251156117525782518084602001fd5b8160405162461bcd60e51b81526004016103ae9190611798565b60005b8381101561178757818101518382015260200161176f565b838111156113a65750506000910152565b60208152600082518060208401526117b781604085016020870161176c565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461142b57600080fd5b600080604083850312156117f557600080fd5b6117fe836117cb565b946020939093013593505050565b60008060006060848603121561182157600080fd5b61182a846117cb565b9250611838602085016117cb565b9150604084013590509250925092565b60006020828403121561185a57600080fd5b6109d6826117cb565b6000806040838503121561187657600080fd5b61187f836117cb565b915061188d602084016117cb565b90509250929050565b600181811c908216806118aa57607f821691505b602082108114156118cb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156118e357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611913576119136118ea565b500190565b6000816000190483118215151615611932576119326118ea565b500290565b60008261195457634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561196b5761196b6118ea565b500390565b60006020828403121561198257600080fd5b815180151581146109d657600080fd5b600082516119a481846020870161176c565b919091019291505056fea164736f6c6343000809000a";

type USDLFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDLFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDLFactory__factory extends ContractFactory {
  constructor(...args: USDLFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "USDLFactory";
  }

  deploy(
    usdcAddress_: string,
    manager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDLFactory> {
    return super.deploy(
      usdcAddress_,
      manager_,
      overrides || {}
    ) as Promise<USDLFactory>;
  }
  getDeployTransaction(
    usdcAddress_: string,
    manager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(usdcAddress_, manager_, overrides || {});
  }
  attach(address: string): USDLFactory {
    return super.attach(address) as USDLFactory;
  }
  connect(signer: Signer): USDLFactory__factory {
    return super.connect(signer) as USDLFactory__factory;
  }
  static readonly contractName: "USDLFactory";
  public readonly contractName: "USDLFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDLFactoryInterface {
    return new utils.Interface(_abi) as USDLFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDLFactory {
    return new Contract(address, _abi, signerOrProvider) as USDLFactory;
  }
}

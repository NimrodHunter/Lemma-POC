/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { USDLFactory, USDLFactoryInterface } from "../USDLFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "usdcAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "manager_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "origin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VaultTransfered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526000196080523480156200001757600080fd5b5060405162001431380380620014318339810160408190526200003a916200024e565b604080518082018252600981526813195b5b58481554d160ba1b6020808301918252835180850190945260048452631554d11360e21b90840152815191929162000087916003916200018b565b5080516200009d9060049060208401906200018b565b50506001600555506001600160a01b038216620001015760405162461bcd60e51b815260206004820152601c60248201527f5553444320616464726573732073686f756c64206e6f7420626520300000000060448201526064015b60405180910390fd5b6001600160a01b038116620001595760405162461bcd60e51b815260206004820152601f60248201527f4d616e6167657220616464726573732073686f756c64206e6f742062652030006044820152606401620000f8565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055620002c3565b828054620001999062000286565b90600052602060002090601f016020900481019282620001bd576000855562000208565b82601f10620001d857805160ff191683800117855562000208565b8280016001018555821562000208579182015b8281111562000208578251825591602001919060010190620001eb565b50620002169291506200021a565b5090565b5b808211156200021657600081556001016200021b565b80516001600160a01b03811681146200024957600080fd5b919050565b600080604083850312156200026257600080fd5b6200026d8362000231565b91506200027d6020840162000231565b90509250929050565b600181811c908216806200029b57607f821691505b60208210811415620002bd57634e487b7160e01b600052602260045260246000fd5b50919050565b608051611155620002dc600039600050506111556000f3fe6080604052600436106100c75760003560e01c806370a0823111610074578063a457c2d71161004e578063a457c2d714610200578063a9059cbb14610220578063dd62ed3e1461024057600080fd5b806370a08231146101a257806395d89b41146101d8578063a0712d68146101ed57600080fd5b806323b872dd116100a557806323b872dd14610146578063313ce56714610166578063395093511461018257600080fd5b806306fdde03146100cc578063095ea7b3146100f757806318160ddd14610127575b600080fd5b3480156100d857600080fd5b506100e1610286565b6040516100ee9190610f66565b60405180910390f35b34801561010357600080fd5b50610117610112366004610fb5565b610318565b60405190151581526020016100ee565b34801561013357600080fd5b506002545b6040519081526020016100ee565b34801561015257600080fd5b50610117610161366004610fdf565b61032e565b34801561017257600080fd5b50604051601281526020016100ee565b34801561018e57600080fd5b5061011761019d366004610fb5565b6103f4565b3480156101ae57600080fd5b506101386101bd36600461101b565b6001600160a01b031660009081526020819052604090205490565b3480156101e457600080fd5b506100e1610430565b6101176101fb366004611036565b61043f565b34801561020c57600080fd5b5061011761021b366004610fb5565b610607565b34801561022c57600080fd5b5061011761023b366004610fb5565b6106b8565b34801561024c57600080fd5b5061013861025b36600461104f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461029590611082565b80601f01602080910402602001604051908101604052809291908181526020018280546102c190611082565b801561030e5780601f106102e35761010080835404028352916020019161030e565b820191906000526020600020905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b60006103253384846106c5565b50600192915050565b600061033b8484846107e9565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103da5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103e785338584036106c5565b60019150505b9392505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161032591859061042b9086906110d3565b6106c5565b60606004805461029590611082565b6000600260055414156104945760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103d1565b60026005553415610540576104b733836109c45b6104b291906110eb565b6109e8565b6104c034610ac7565b61050c5760405162461bcd60e51b815260206004820152600e60248201527f73656e6420657468206661696c7300000000000000000000000000000000000060448201526064016103d1565b604051829060009033907fa7dad0ff2f2558cd7cdeee9587213fbecfee146d0b958364e61fbe66af67bf2b908390a46105fb565b61054982610b27565b61055257600080fd5b61055e338360016104a8565b600654610574906001600160a01b031683610c56565b6105c05760405162461bcd60e51b815260206004820152601060248201527f73656e6420746f6b656e206661696c730000000000000000000000000000000060448201526064016103d1565b60065460405183916001600160a01b03169033907fa7dad0ff2f2558cd7cdeee9587213fbecfee146d0b958364e61fbe66af67bf2b90600090a45b50600180600555919050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156106a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103d1565b6106ae33858584036106c5565b5060019392505050565b60006103253384846107e9565b6001600160a01b0383166107275760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d1565b6001600160a01b0382166107885760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166108655760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103d1565b6001600160a01b0382166108c75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d1565b6001600160a01b038316600090815260208190526040902054818110156109565760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103d1565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061098d9084906110d3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109d991815260200190565b60405180910390a35b50505050565b6001600160a01b038216610a3e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d1565b8060026000828254610a5091906110d3565b90915550506001600160a01b03821660009081526020819052604081208054839290610a7d9084906110d3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60075460405160009182916001600160a01b039091169084908381818185875af1925050503d8060008114610b18576040519150601f19603f3d011682016040523d82523d6000602084013e610b1d565b606091505b5090949350505050565b6000808211610b785760405162461bcd60e51b815260206004820152601760248201527f796f75206d7573742073656e6420736f6d657468696e6700000000000000000060448201526064016103d1565b6006546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610bca57600080fd5b505af1158015610bde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c02919061110a565b610c4e5760405162461bcd60e51b815260206004820152601b60248201527f7472616e736665722066726f6d2063616e277420626520646f6e65000000000060448201526064016103d1565b506001919050565b6007546000906103259084906001600160a01b031684610c76565b505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610c7192869291600091610d1b918516908490610dab565b805190915015610c715780806020019051810190610d39919061110a565b610c715760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103d1565b6060610dba8484600085610dc2565b949350505050565b606082471015610e3a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103d1565b843b610e885760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103d1565b600080866001600160a01b03168587604051610ea4919061112c565b60006040518083038185875af1925050503d8060008114610ee1576040519150601f19603f3d011682016040523d82523d6000602084013e610ee6565b606091505b5091509150610ef6828286610f01565b979650505050505050565b60608315610f105750816103ed565b825115610f205782518084602001fd5b8160405162461bcd60e51b81526004016103d19190610f66565b60005b83811015610f55578181015183820152602001610f3d565b838111156109e25750506000910152565b6020815260008251806020840152610f85816040850160208701610f3a565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610fb057600080fd5b919050565b60008060408385031215610fc857600080fd5b610fd183610f99565b946020939093013593505050565b600080600060608486031215610ff457600080fd5b610ffd84610f99565b925061100b60208501610f99565b9150604084013590509250925092565b60006020828403121561102d57600080fd5b6103ed82610f99565b60006020828403121561104857600080fd5b5035919050565b6000806040838503121561106257600080fd5b61106b83610f99565b915061107960208401610f99565b90509250929050565b600181811c9082168061109657607f821691505b602082108114156110b757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156110e6576110e66110bd565b500190565b6000816000190483118215151615611105576111056110bd565b500290565b60006020828403121561111c57600080fd5b815180151581146103ed57600080fd5b6000825161113e818460208701610f3a565b919091019291505056fea164736f6c6343000809000a";

type USDLFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDLFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDLFactory__factory extends ContractFactory {
  constructor(...args: USDLFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "USDLFactory";
  }

  deploy(
    usdcAddress_: string,
    manager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<USDLFactory> {
    return super.deploy(
      usdcAddress_,
      manager_,
      overrides || {}
    ) as Promise<USDLFactory>;
  }
  getDeployTransaction(
    usdcAddress_: string,
    manager_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(usdcAddress_, manager_, overrides || {});
  }
  attach(address: string): USDLFactory {
    return super.attach(address) as USDLFactory;
  }
  connect(signer: Signer): USDLFactory__factory {
    return super.connect(signer) as USDLFactory__factory;
  }
  static readonly contractName: "USDLFactory";
  public readonly contractName: "USDLFactory";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDLFactoryInterface {
    return new utils.Interface(_abi) as USDLFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDLFactory {
    return new Contract(address, _abi, signerOrProvider) as USDLFactory;
  }
}
